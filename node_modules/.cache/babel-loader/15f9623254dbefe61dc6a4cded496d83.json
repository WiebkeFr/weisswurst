{"ast":null,"code":"var _jsxFileName = \"/Users/wiebkefreitag/Documents/Wei\\xDFwurst/src/components/create-order/create-order.js\";\nimport React, { useState } from \"react\";\nimport './create-order.css';\nimport CountingButton from \"./counting-button\";\n\nconst meatList = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meatList\",\n    id: \"meatList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, props.filter(meal => !meal.veg).map(meal => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"orderContainer\",\n      key: meal.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 33\n      }\n    }, meal.name), /*#__PURE__*/React.createElement(CountingButton, {\n      id: meal.id,\n      initialAmount: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 33\n      }\n    }));\n  }));\n};\n\nconst vegList = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vegList\",\n    id: \"vegList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, props.filter(meal => meal.veg).map(meal => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"orderContainer\",\n      key: meal.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 29\n      }\n    }, meal.name), /*#__PURE__*/React.createElement(CountingButton, {\n      id: meal.id,\n      initialAmount: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 29\n      }\n    }));\n  }));\n};\n\nfunction CreateOrder(props) {\n  const INITIAL_STATE = {\n    name: '',\n    email: '',\n    eatingHabit: 'Wurstliebhaber',\n    items: '',\n    show: false\n  };\n  const [order, setOrder] = useState(INITIAL_STATE);\n\n  const printMeatList = props => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, meatList(props), vegList(props));\n  };\n\n  const printVegList = props => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, vegList(props));\n  };\n\n  const reset = () => {\n    setOrder(INITIAL_STATE);\n\n    if (order.eatingHabit === \"Wurstliebhaber\") {\n      document.getElementById(\"button-number0\").innerText = \"0\";\n      document.getElementById(\"button-number1\").innerText = \"0\";\n      document.getElementById(\"button-number2\").innerText = \"0\";\n      document.getElementById(\"button-number3\").innerText = \"0\";\n    }\n\n    document.getElementById(\"Wurstliebhaber\").click();\n    document.getElementById(\"addingNewOrder\").style.display = \"none\";\n    setOrder({\n      name: '',\n      email: '',\n      eatingHabit: 'Wurstliebhaber',\n      items: '',\n      show: true\n    });\n  };\n\n  const makeOrder = props => {\n    const name = document.getElementById(\"name-input\").value.toString();\n    const email = document.getElementById(\"email-input\").value.toString();\n    let ww;\n    let db;\n\n    if (props === \"Wurstliebhaber\") {\n      ww = Number.parseInt(document.getElementById(\"button-number0\").innerText);\n      db = Number.parseInt(document.getElementById(\"button-number1\").innerText);\n    } else {\n      ww = 0;\n      db = 0;\n    }\n\n    const ks = Number.parseInt(document.getElementById(\"button-number2\").innerText);\n    const bz = Number.parseInt(document.getElementById(\"button-number3\").innerText);\n    reset();\n    return {\n      name: name,\n      email: email,\n      items: [ww, db, ks, bz]\n    };\n  };\n\n  const show = () => {\n    setOrder({ ...order,\n      show: true\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addingNewOrder\",\n    className: \"addingNewOrder\",\n    style: {\n      display: \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"newOrder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Neue Bestellungen aufgeben\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"F\\xFCr wen ist die Bestellung?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerForInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name-input\",\n    className: \"name-input\",\n    name: \"name-input\",\n    placeholder: \"Name\",\n    value: order.name,\n    onChange: event => setOrder({ ...order,\n      name: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email-input\",\n    className: \"email-input\",\n    placeholder: \"E-Mail\",\n    required: true,\n    value: order.email,\n    onChange: event => setOrder({ ...order,\n      email: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"email-index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  }, \"Integer posuere erat a ante venenatis dapibus posuere velit aliquet.\"))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Was m\\xF6chte derjenige essen?\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 10,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"meal\",\n    style: {\n      marginLeft: 0\n    },\n    id: \"Wurstliebhaber\",\n    defaultChecked: true,\n    onChange: () => setOrder({ ...order,\n      eatingHabit: 'Wurstliebhaber'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"wurstliebhaber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, \"Wurstliebhaber\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"meal\",\n    id: \"Vegetarisch/Vegan\",\n    onChange: () => setOrder({ ...order,\n      eatingHabit: 'Vegetarisch/Vegan'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"vegetarisch/vegan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }, \"Vegetarisch/Vegan\")), order.eatingHabit === \"Vegetarisch/Vegan\" ? printVegList(props.meals) : printMeatList(props.meals), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"#orderList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"buttons\",\n    onClick: () => props.appendItem(makeOrder(order.eatingHabit)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, \"Zur Bestellung hinzuf\\xFCgen\")));\n}\n\nexport default CreateOrder;","map":{"version":3,"sources":["/Users/wiebkefreitag/Documents/Wei√üwurst/src/components/create-order/create-order.js"],"names":["React","useState","CountingButton","meatList","props","filter","meal","veg","map","id","name","vegList","CreateOrder","INITIAL_STATE","email","eatingHabit","items","show","order","setOrder","printMeatList","printVegList","reset","document","getElementById","innerText","click","style","display","makeOrder","value","toString","ww","db","Number","parseInt","ks","bz","event","target","marginTop","marginBottom","marginLeft","meals","appendItem"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport './create-order.css'\nimport CountingButton from \"./counting-button\";\n\nconst meatList = (props) => {\n    return(\n        <div className=\"meatList\" id=\"meatList\">\n            {props.filter(meal => !meal.veg)\n                    .map(meal => {\n                        return(\n                            <li className=\"orderContainer\" key={meal.id}>\n                                <p>{meal.name}</p>\n                                <CountingButton id={meal.id} initialAmount={0}/>\n                            </li>\n                        )\n            })}\n        </div>\n    )\n}\n\nconst vegList = (props) => {\n    return(\n        <div className=\"vegList\" id=\"vegList\">\n            {props.filter(meal => meal.veg)\n                .map(meal => {\n                    return(\n                        <li className=\"orderContainer\" key={meal.id}>\n                            <p>{meal.name}</p>\n                            <CountingButton id={meal.id} initialAmount={0}/>\n                        </li>\n                    )\n                })}\n        </div>\n    )\n}\n\n\nfunction CreateOrder(props){\n    const INITIAL_STATE = {\n        name: '',\n        email: '',\n        eatingHabit: 'Wurstliebhaber',\n        items: '',\n        show: false\n    }\n    const [order, setOrder] = useState(INITIAL_STATE)\n\n    const printMeatList = (props) => {\n        return(\n                <ul >\n                    {meatList(props)}\n                    {vegList(props)}\n                </ul>\n            )\n    }\n\n    const printVegList = (props) => {\n        return(\n                <ul >\n                    {vegList(props)}\n                </ul>\n            )\n    }\n\n    const reset = () => {\n        setOrder(INITIAL_STATE)\n\n        if(order.eatingHabit === \"Wurstliebhaber\"){\n            document.getElementById(\"button-number0\").innerText = \"0\"\n            document.getElementById(\"button-number1\").innerText = \"0\"\n            document.getElementById(\"button-number2\").innerText = \"0\"\n            document.getElementById(\"button-number3\").innerText = \"0\"\n        }\n        document.getElementById(\"Wurstliebhaber\").click()\n        document.getElementById(\"addingNewOrder\").style.display = \"none\"\n\n        setOrder({\n            name: '',\n            email: '',\n            eatingHabit: 'Wurstliebhaber',\n            items: '',\n            show: true\n        })\n    }\n\n    const makeOrder = (props) => {\n        const name = document.getElementById(\"name-input\").value.toString();\n        const email = document.getElementById(\"email-input\").value.toString();\n        let ww\n        let db\n        if(props === \"Wurstliebhaber\"){\n            ww = Number.parseInt(document.getElementById(\"button-number0\").innerText)\n            db = Number.parseInt(document.getElementById(\"button-number1\").innerText)\n        }else{\n            ww = 0\n            db = 0\n        }\n        const ks = Number.parseInt(document.getElementById(\"button-number2\").innerText)\n        const bz = Number.parseInt(document.getElementById(\"button-number3\").innerText)\n\n        reset()\n\n        return ({\n                name: name,\n                email: email,\n                items: [ww, db, ks, bz]\n            }\n        )\n    }\n\n    const show = () => {\n        setOrder({...order, show: true})\n    }\n\n    return(\n\n        <div id=\"addingNewOrder\" className=\"addingNewOrder\" style={{display: \"block\"}}>\n            <h2 id=\"newOrder\">Neue Bestellungen aufgeben</h2>\n            <h3>F√ºr wen ist die Bestellung?</h3>\n            <div className=\"containerForInput\">\n                <input type=\"text\" id=\"name-input\" className=\"name-input\" name=\"name-input\" placeholder=\"Name\"\n                       value={order.name}\n                       onChange={(event) =>\n                           setOrder({ ...order, name: event.target.value })\n                       }/>\n                <div>\n                    <input type=\"text\" id=\"email-input\" className=\"email-input\" placeholder=\"E-Mail\" required\n                           value={order.email}\n                        onChange={(event) => setOrder({ ...order, email: event.target.value })}/>\n                    <p className=\"email-index\">Integer posuere erat a ante venenatis dapibus posuere velit aliquet.</p>\n                </div>\n\n            </div>\n            <h3>Was m√∂chte derjenige essen?</h3>\n            <div style={{marginTop: 10, marginBottom: 10}}>\n                <input type=\"radio\" name=\"meal\" style={{marginLeft: 0}} id=\"Wurstliebhaber\" defaultChecked\n                       onChange={() => setOrder({ ...order, eatingHabit: 'Wurstliebhaber' })} />\n                <label htmlFor=\"wurstliebhaber\">Wurstliebhaber</label>\n                <input type=\"radio\" name=\"meal\" id=\"Vegetarisch/Vegan\"\n                       onChange={() => setOrder({ ...order, eatingHabit: 'Vegetarisch/Vegan' })}/>\n                <label htmlFor=\"vegetarisch/vegan\">Vegetarisch/Vegan</label>\n            </div>\n\n            {order.eatingHabit === \"Vegetarisch/Vegan\"? printVegList(props.meals) : printMeatList(props.meals)}\n\n            <form action=\"#orderList\">\n                <button type=\"submit\" className=\"buttons\"\n                        onClick={() => props.appendItem(makeOrder(order.eatingHabit))}>Zur Bestellung hinzuf√ºgen</button>\n            </form>\n        </div>\n\n    )\n}\n\nexport default CreateOrder"]},"metadata":{},"sourceType":"module"}