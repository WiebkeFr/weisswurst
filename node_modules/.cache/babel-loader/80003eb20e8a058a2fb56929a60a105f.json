{"ast":null,"code":"var _jsxFileName = \"/Users/wiebkefreitag/Documents/Wei\\xDFwurst/weisswurst-fruehstueck/src/order/createOrder.js\";\nimport React, { useState } from \"react\";\nimport CountingButton from \"./countingButton\";\n\nconst meatList = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"meatList\",\n    id: \"meatList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    id: \"list1W\",\n    className: \"orderContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 17\n    }\n  }, \"Wei\\xDFw\\xFCrste\"), /*#__PURE__*/React.createElement(CountingButton, {\n    id: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"li\", {\n    id: \"list1D\",\n    className: \"orderContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, \"Debreziner\"), /*#__PURE__*/React.createElement(CountingButton, {\n    id: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  })));\n};\n\nconst vegList = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"vegList\",\n    id: \"vegList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    id: \"list1K\",\n    className: \"orderContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, \"Karottensalat\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CountingButton, {\n    id: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    id: \"list1B\",\n    className: \"orderContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"name-element\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"Brezeln\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CountingButton, {\n    id: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }))));\n};\n\nconst makeOrder = props => {\n  console.log(\"in make Order\");\n  const name = document.getElementById(\"name-input\").value.toString();\n  const email = document.getElementById(\"email-input\").value.toString();\n  let ww;\n  let db;\n  console.log(props);\n\n  if (props.eatingHabit === \"Wurstliebhaber\") {\n    ww = Number.parseInt(document.getElementById(\"button-number0\").innerText);\n    db = Number.parseInt(document.getElementById(\"button-number1\").innerText);\n  } else {\n    ww = 0;\n    db = 0;\n  }\n\n  const ks = Number.parseInt(document.getElementById(\"button-number2\").innerText);\n  const bz = Number.parseInt(document.getElementById(\"button-number3\").innerText);\n  return {\n    name: name,\n    email: email,\n    items: [ww, db, ks, bz]\n  };\n};\n\nfunction CreateOrder(props) {\n  const [order, setOrder] = useState({\n    name: '',\n    eatingHabit: '',\n    items: ''\n  });\n\n  const printMeatList = () => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"mealList\",\n      className: \"mealList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, meatList(), vegList());\n  };\n\n  const printVegList = () => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      id: \"mealList\",\n      className: \"mealList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, vegList());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addingNewOrder\",\n    className: \"addingNewOrder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"newOrder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"Neue Bestellungen aufgeben\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"F\\xFCr wen ist die Bestellung?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerForInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name-input\",\n    className: \"name-input\",\n    name: \"name-input\",\n    placeholder: \"Name\",\n    onChange: event => setOrder({ ...order,\n      name: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email-input\",\n    className: \"email-input\",\n    placeholder: \"E-Mail\",\n    required: true,\n    onChange: event => setOrder({ ...order,\n      email: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"email-index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Integer posuere erat a ante venenatis dapibus posuere velit aliquet.\"))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Was m\\xF6chte derjenige essen?\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 10,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"meal\",\n    style: {\n      marginLeft: 0\n    },\n    id: \"Wurstliebhaber\",\n    defaultChecked: true,\n    onChange: () => setOrder({ ...order,\n      eatingHabit: 'Wurstliebhaber'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"wurstliebhaber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Wurstliebhaber\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"meal\",\n    id: \"Vegetarisch/Vegan\",\n    onChange: () => setOrder({ ...order,\n      eatingHabit: 'Vegetarisch/Vegan'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"vegetarisch/vegan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, \"Vegetarisch/Vegan\")), order.eatingHabit === \"Vegetarisch/Vegan\" ? printVegList() : printMeatList(), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"#orderList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"buttons\",\n    onClick: () => props.appendItem(makeOrder(order.eatingHabit)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, \"Zur Bestellung hinzuf\\xFCgen\")));\n}\n\nexport default CreateOrder;","map":{"version":3,"sources":["/Users/wiebkefreitag/Documents/Wei√üwurst/weisswurst-fruehstueck/src/order/createOrder.js"],"names":["React","useState","CountingButton","meatList","vegList","makeOrder","props","console","log","name","document","getElementById","value","toString","email","ww","db","eatingHabit","Number","parseInt","innerText","ks","bz","items","CreateOrder","order","setOrder","printMeatList","printVegList","event","target","marginTop","marginBottom","marginLeft","appendItem"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport CountingButton from \"./countingButton\";\n\nconst meatList = () => {\n    return(\n        <div className=\"meatList\" id=\"meatList\">\n            <li id=\"list1W\" className=\"orderContainer\">\n                <p className=\"\">Wei√üw√ºrste</p>\n                <CountingButton id=\"0\"/>\n            </li>\n            <li id=\"list1D\" className=\"orderContainer\">\n                <p className=\"name-element\">Debreziner</p>\n                <CountingButton id=\"1\"/>\n            </li>\n        </div>\n    )\n}\n\nconst vegList = () => {\n    return(\n        <div className=\"vegList\" id=\"vegList\">\n            <li id=\"list1K\" className=\"orderContainer\">\n                <p className=\"name-element\">Karottensalat</p>\n                <div>\n                    <CountingButton id=\"2\"/>\n                </div>\n            </li>\n            <li id=\"list1B\" className=\"orderContainer\">\n                <p className=\"name-element\">Brezeln</p>\n                <div>\n                    <CountingButton id=\"3\"/>\n                </div>\n            </li>\n        </div>\n    )\n}\n\n\n\n\nconst makeOrder = (props) => {\n    console.log(\"in make Order\")\n    const name = document.getElementById(\"name-input\").value.toString();\n    const email = document.getElementById(\"email-input\").value.toString();\n    let ww\n    let db\n    console.log(props)\n    if(props.eatingHabit === \"Wurstliebhaber\"){\n        ww = Number.parseInt(document.getElementById(\"button-number0\").innerText)\n        db = Number.parseInt(document.getElementById(\"button-number1\").innerText)\n    }else{\n        ww = 0\n        db = 0\n    }\n    const ks = Number.parseInt(document.getElementById(\"button-number2\").innerText)\n    const bz = Number.parseInt(document.getElementById(\"button-number3\").innerText)\n\n    return ({\n        name: name,\n        email: email,\n        items: [ww, db, ks, bz]\n    }\n    )\n}\n\nfunction CreateOrder(props){\n    const [order, setOrder] = useState({\n        name: '',\n        eatingHabit: '',\n        items: '',\n    })\n\n    const printMeatList = () => {\n        return(\n                <ul id=\"mealList\" className=\"mealList\">\n                    {meatList()}\n                    {vegList()}\n                </ul>\n            )\n    }\n\n    const printVegList = () => {\n        return(\n                <ul id=\"mealList\" className=\"mealList\">\n                    {vegList()}\n                </ul>\n            )\n    }\n\n    return(\n        <div id=\"addingNewOrder\" className=\"addingNewOrder\">\n            <h2 id=\"newOrder\">Neue Bestellungen aufgeben</h2>\n            <h3>F√ºr wen ist die Bestellung?</h3>\n            <div className=\"containerForInput\">\n                <input type=\"text\" id=\"name-input\" className=\"name-input\" name=\"name-input\" placeholder=\"Name\"\n                       onChange={(event) =>\n                           setOrder({ ...order, name: event.target.value })\n                       }/>\n                <div>\n                    <input type=\"text\" id=\"email-input\" className=\"email-input\" placeholder=\"E-Mail\" required\n                        onChange={(event) => setOrder({ ...order, email: event.target.value })}/>\n                    <p className=\"email-index\">Integer posuere erat a ante venenatis dapibus posuere velit aliquet.</p>\n                </div>\n\n            </div>\n            <h3>Was m√∂chte derjenige essen?</h3>\n            <div style={{marginTop: 10, marginBottom: 10}}>\n                { /** https://wiki.selfhtml.org/wiki/HTML/Formulare/input/Radio-Buttons_und_Checkboxen */ }\n                <input type=\"radio\" name=\"meal\" style={{marginLeft: 0}} id=\"Wurstliebhaber\" defaultChecked\n                       onChange={() => setOrder({ ...order, eatingHabit: 'Wurstliebhaber' })} />\n                <label htmlFor=\"wurstliebhaber\">Wurstliebhaber</label>\n                <input type=\"radio\" name=\"meal\" id=\"Vegetarisch/Vegan\"\n                       onChange={() => setOrder({ ...order, eatingHabit: 'Vegetarisch/Vegan' })}/>\n                <label htmlFor=\"vegetarisch/vegan\">Vegetarisch/Vegan</label>\n            </div>\n\n            {order.eatingHabit === \"Vegetarisch/Vegan\"? printVegList() : printMeatList()}\n\n            <form action=\"#orderList\">\n                <button type=\"submit\" className=\"buttons\" onClick={() => props.appendItem(makeOrder(order.eatingHabit))}>Zur Bestellung hinzuf√ºgen</button>\n            </form>\n        </div>\n\n    )\n}\n\n\nexport default CreateOrder"]},"metadata":{},"sourceType":"module"}