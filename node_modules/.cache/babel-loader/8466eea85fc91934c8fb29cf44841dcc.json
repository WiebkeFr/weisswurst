{"ast":null,"code":"var _jsxFileName = \"/Users/wiebkefreitag/Documents/Wei\\xDFwurst/weisswurst-fruehstueck/src/components/shoppingList.js\";\nimport React from \"react\";\n\nfunction ShoppingList(props) {\n  let mealNumber = [0, 0, 0, 0];\n  console.log(mealNumber);\n  props.orderItems.forEach(order => {\n    for (let i = 0; i < props.meals.length; i++) {\n      mealNumber[i] += order.items[i];\n    }\n  });\n  console.log(mealNumber);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"3 Einkaufszettel\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Zur Erinnerung: Gewinner darf heute das Wei\\xDFwurstfr\\xFChst\\xFCck holen.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"shoppingList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"Gesamtbestellung\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"totalOrder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 25\n    }\n  }, props.meals.map(meal => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: meal.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 41\n      }\n    }, meal.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 45\n      }\n    }, mealNumber[meal.id], \" St\\xFCck\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 41\n      }\n    }, \"pro St\\xFCck \", meal.price.replace(\".\", \",\"), \" \\u20AC\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 41\n      }\n    }, (mealNumber[meal.id] * Number.parseFloat(meal.price)).toPrecision(3).toString().replace(\".\", \",\"), \" \\u20AC\"));\n  }), /*#__PURE__*/React.createElement(\"tfoot\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"paymentList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Wer muss wie viel bezahlen?\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, \"Einkaufszettel drucken\"));\n}\n\nexport default ShoppingList;","map":{"version":3,"sources":["/Users/wiebkefreitag/Documents/Weißwurst/weisswurst-fruehstueck/src/components/shoppingList.js"],"names":["React","ShoppingList","props","mealNumber","console","log","orderItems","forEach","order","i","meals","length","items","map","meal","id","name","price","replace","Number","parseFloat","toPrecision","toString"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA4B;AACxB,MAAIC,UAAU,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAjB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAD,EAAAA,KAAK,CAACI,UAAN,CAAiBC,OAAjB,CAA0BC,KAAK,IAAI;AAC/B,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAA/B,EAAuCF,CAAC,EAAxC,EAA2C;AACvCN,MAAAA,UAAU,CAACM,CAAD,CAAV,IAAiBD,KAAK,CAACI,KAAN,CAAYH,CAAZ,CAAjB;AACH;AACA,GAJL;AAMAL,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AAEA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kFAFJ,eAGI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,KAAK,CAACQ,KAAN,CAAYG,GAAZ,CAAgBC,IAAI,IAAI;AACpB,wBACI;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACE,IAAV,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIb,UAAU,CAACW,IAAI,CAACC,EAAN,CAAd,cAAJ,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAeD,IAAI,CAACG,KAAL,CAAWC,OAAX,CAAmB,GAAnB,EAAwB,GAAxB,CAAf,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,CAACf,UAAU,CAACW,IAAI,CAACC,EAAN,CAAV,GAAsBI,MAAM,CAACC,UAAP,CAAkBN,IAAI,CAACG,KAAvB,CAAvB,EACAI,WADA,CACY,CADZ,EACeC,QADf,GAEAJ,OAFA,CAEQ,GAFR,EAEa,GAFb,CAAL,YAJJ,CADJ;AAUH,GAXD,CAFJ,eAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfA,CADJ,CAFJ,CADJ,eAyBI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ,CAzBJ,CAHJ,eAqCI;AAAQ,IAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BArCJ,CADJ;AA0CH;;AAED,eAAejB,YAAf","sourcesContent":["import React from \"react\"\n\nfunction ShoppingList(props){\n    let mealNumber = [0,0,0,0]\n    console.log(mealNumber)\n    props.orderItems.forEach( order => {\n        for(let i = 0; i < props.meals.length; i++){\n            mealNumber[i] += order.items[i]\n        }\n        }\n    )\n    console.log(mealNumber)\n\n    return(\n        <div>\n            <h1>3 Einkaufszettel</h1>\n            <h3>Zur Erinnerung: Gewinner darf heute das Weißwurstfrühstück holen.</h3>\n            <div className=\"shoppingList\">\n                <div>\n                    <h3>Gesamtbestellung</h3>\n                    <table className=\"totalOrder\">\n                        <tbody>\n                        {\n                            props.meals.map(meal => {\n                                return(\n                                    <tr key={meal.id}>\n                                        <td>{meal.name}</td>\n                                        <td><b>{mealNumber[meal.id]} Stück</b></td>\n                                        <td>pro Stück {meal.price.replace(\".\", \",\")} €</td>\n                                        <td>{(mealNumber[meal.id] * Number.parseFloat(meal.price))\n                                            .toPrecision(3).toString()\n                                            .replace(\".\", \",\")} €</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                        <tfoot>\n                            \n                        </tfoot>\n                        </tbody>\n                    </table>\n                </div>\n                <div className=\"paymentList\">\n                    <h3>Wer muss wie viel bezahlen?</h3>\n                    <ul>\n                        <li>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <button className=\"buttons\">Einkaufszettel drucken</button>\n\n        </div>\n    )\n}\n\nexport default ShoppingList"]},"metadata":{},"sourceType":"module"}