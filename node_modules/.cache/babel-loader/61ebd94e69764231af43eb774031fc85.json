{"ast":null,"code":"var _jsxFileName = \"/Users/wiebkefreitag/Documents/Wei\\xDFwurst/src/components/create-order/create-order.js\";\nimport React, { useState } from \"react\";\nimport './create-order.css';\nimport CountingButton from \"./counting-button\";\n\nfunction CreateOrder(props) {\n  const INITIAL_STATE = {\n    name: '',\n    email: '',\n    eatingHabit: 'Wurstliebhaber',\n    items: [],\n    show: false\n  };\n  const [order, setOrder] = useState(INITIAL_STATE);\n\n  const setAmount = props => {\n    let newItems = [];\n    order.items.forEach(item => newItems.push(item));\n    newItems[props.id] = props.amount;\n    setOrder({ ...order,\n      items: newItems\n    });\n  };\n\n  const reset = () => {\n    setOrder(INITIAL_STATE);\n  };\n\n  const makeOrder = props => {\n    const name = document.getElementById(\"name-input\").value.toString();\n    const email = document.getElementById(\"email-input\").value.toString();\n    let ww;\n    let db;\n\n    if (props === \"Wurstliebhaber\") {\n      ww = Number.parseInt(document.getElementById(\"button-number0\").innerText);\n      db = Number.parseInt(document.getElementById(\"button-number1\").innerText);\n    } else {\n      ww = 0;\n      db = 0;\n    }\n\n    const ks = Number.parseInt(document.getElementById(\"button-number2\").innerText);\n    const bz = Number.parseInt(document.getElementById(\"button-number3\").innerText);\n    reset();\n    return {\n      name: name,\n      email: email,\n      items: [ww, db, ks, bz]\n    };\n  };\n\n  const show = () => {\n    setOrder({ ...order,\n      show: true\n    });\n  };\n\n  const printList = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mealList\",\n      id: \"mealList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, props.meals.map(meal => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        className: order.eatingHabit === \"Vegetarisch/Vegan\" && !meal.veg ? \"orderNotShown\" : \"orderContainer\",\n        key: meal.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }\n      }, meal.name), /*#__PURE__*/React.createElement(CountingButton, {\n        id: meal.id,\n        initialAmount: 0,\n        setNewAmount: props => setAmount(props),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }));\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"addingNewOrder\",\n    className: \"addingNewOrder\",\n    style: {\n      display: \"block\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"newOrder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Neue Bestellungen aufgeben\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"F\\xFCr wen ist die Bestellung?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"containerForInput\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name-input\",\n    className: \"name-input\",\n    name: \"name-input\",\n    placeholder: \"Name\",\n    value: order.name,\n    onChange: event => setOrder({ ...order,\n      name: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email-input\",\n    className: \"email-input\",\n    placeholder: \"E-Mail\",\n    required: true,\n    value: order.email,\n    onChange: event => setOrder({ ...order,\n      email: event.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"email-index\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"Integer posuere erat a ante venenatis dapibus posuere velit aliquet.\"))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Was m\\xF6chte derjenige essen?\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: 10,\n      marginBottom: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"meal\",\n    style: {\n      marginLeft: 0\n    },\n    id: \"Wurstliebhaber\",\n    defaultChecked: true,\n    onChange: () => setOrder({ ...order,\n      eatingHabit: 'Wurstliebhaber'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"wurstliebhaber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Wurstliebhaber\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: \"meal\",\n    id: \"Vegetarisch/Vegan\",\n    onChange: () => setOrder({ ...order,\n      eatingHabit: 'Vegetarisch/Vegan'\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"vegetarisch/vegan\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, \"Vegetarisch/Vegan\")), printList(), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"#orderList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"buttons\",\n    onClick: () => props.appendItem(makeOrder(order.eatingHabit)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"Zur Bestellung hinzuf\\xFCgen\")));\n}\n\nexport default CreateOrder;","map":{"version":3,"sources":["/Users/wiebkefreitag/Documents/Wei√üwurst/src/components/create-order/create-order.js"],"names":["React","useState","CountingButton","CreateOrder","props","INITIAL_STATE","name","email","eatingHabit","items","show","order","setOrder","setAmount","newItems","forEach","item","push","id","amount","reset","makeOrder","document","getElementById","value","toString","ww","db","Number","parseInt","innerText","ks","bz","printList","meals","map","meal","veg","display","event","target","marginTop","marginBottom","marginLeft","appendItem"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport './create-order.css'\nimport CountingButton from \"./counting-button\";\n\nfunction CreateOrder(props){\n    const INITIAL_STATE = {\n        name: '',\n        email: '',\n        eatingHabit: 'Wurstliebhaber',\n        items: [],\n        show: false\n    }\n    const [order, setOrder] = useState(INITIAL_STATE)\n\n\n    \n\n    const setAmount = (props) => {\n        let newItems = []\n        order.items.forEach(item => newItems.push(item))\n        newItems[props.id] = props.amount\n        setOrder({...order, items: newItems})\n    }\n\n    const reset = () => {\n        setOrder(INITIAL_STATE)\n    }\n\n    const makeOrder = (props) => {\n        const name = document.getElementById(\"name-input\").value.toString();\n        const email = document.getElementById(\"email-input\").value.toString();\n        let ww\n        let db\n        if(props === \"Wurstliebhaber\"){\n            ww = Number.parseInt(document.getElementById(\"button-number0\").innerText)\n            db = Number.parseInt(document.getElementById(\"button-number1\").innerText)\n        }else{\n            ww = 0\n            db = 0\n        }\n        const ks = Number.parseInt(document.getElementById(\"button-number2\").innerText)\n        const bz = Number.parseInt(document.getElementById(\"button-number3\").innerText)\n\n        reset()\n\n        return ({\n                name: name,\n                email: email,\n                items: [ww, db, ks, bz]\n            }\n        )\n    }\n\n    const show = () => {\n        setOrder({...order, show: true})\n    }\n\n    const printList = () => {\n        return(\n            <div className=\"mealList\" id=\"mealList\">\n                {props.meals.map(meal => {\n                        return(\n                            <li className={order.eatingHabit === \"Vegetarisch/Vegan\" && !meal.veg ?\n                                \"orderNotShown\": \"orderContainer\"} key={meal.id}>\n                                <p>{meal.name}</p>\n                                <CountingButton id={meal.id} initialAmount={0} setNewAmount={(props) => setAmount(props)}/>\n                            </li>\n                        )\n                    })}\n            </div>\n        )\n    }\n\n    return(\n\n        <div id=\"addingNewOrder\" className=\"addingNewOrder\" style={{display: \"block\"}}>\n            <h2 id=\"newOrder\">Neue Bestellungen aufgeben</h2>\n            <h3>F√ºr wen ist die Bestellung?</h3>\n            <div className=\"containerForInput\">\n                <input type=\"text\" id=\"name-input\" className=\"name-input\" name=\"name-input\" placeholder=\"Name\"\n                       value={order.name}\n                       onChange={(event) =>\n                           setOrder({ ...order, name: event.target.value })\n                       }/>\n                <div>\n                    <input type=\"text\" id=\"email-input\" className=\"email-input\" placeholder=\"E-Mail\" required\n                           value={order.email}\n                        onChange={(event) => setOrder({ ...order, email: event.target.value })}/>\n                    <p className=\"email-index\">Integer posuere erat a ante venenatis dapibus posuere velit aliquet.</p>\n                </div>\n\n            </div>\n            <h3>Was m√∂chte derjenige essen?</h3>\n            <div style={{marginTop: 10, marginBottom: 10}}>\n                <input type=\"radio\" name=\"meal\" style={{marginLeft: 0}} id=\"Wurstliebhaber\" defaultChecked\n                       onChange={() => setOrder({ ...order, eatingHabit: 'Wurstliebhaber' })} />\n                <label htmlFor=\"wurstliebhaber\">Wurstliebhaber</label>\n                <input type=\"radio\" name=\"meal\" id=\"Vegetarisch/Vegan\"\n                       onChange={() => setOrder({ ...order, eatingHabit: 'Vegetarisch/Vegan' })}/>\n                <label htmlFor=\"vegetarisch/vegan\">Vegetarisch/Vegan</label>\n            </div>\n\n            {printList()}\n\n            <form action=\"#orderList\">\n                <button type=\"submit\" className=\"buttons\"\n                        onClick={() => props.appendItem(makeOrder(order.eatingHabit))}>Zur Bestellung hinzuf√ºgen</button>\n            </form>\n        </div>\n\n    )\n}\n\nexport default CreateOrder"]},"metadata":{},"sourceType":"module"}